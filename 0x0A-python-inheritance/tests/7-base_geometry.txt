The "7-base_geometry" module
======================

Using "BaseGeometry"
-------------------
Importing the class from the module:
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
	>>> m = __import__("7-base_geometry").__doc__
	>>> len(m) > 1
	True


Checking for class docstring:
	>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
        >>> len(c) > 1
        True

Checking for class methods docstring:
	>>> method1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
        >>> len(method1) > 1
        True

	>>> method2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
        >>> len(method2) > 1
        True

Checking for area methods:
	>>> BG = BaseGeometry()
	>>> BG.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented
	
	>>> BaseGeometry.area(1)
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Checking integer validator:
	>>> BG.integer_validator("name", "John")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer
	
	>>> BG.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0
	
	>>> BG.integer_validator("distance", -4)
	Traceback (most recent call last):
	...
	ValueError: distance must be greater than 0
	>>> BG.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> BG.integer_validator("integer")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'
